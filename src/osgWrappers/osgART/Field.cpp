// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgART/Field>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

//TYPE_NAME_ALIAS(std::map< std::string COMMA  osg::ref_ptr< Field > >, osgART::FieldMap)
#if 0
BEGIN_VALUE_REFLECTOR(osg::ref_ptr< Field >)
	I_DeclaringFile("osg/ref_ptr");
	I_Constructor0(____ref_ptr,
	               "",
	               "");
//	I_Constructor1(IN, Field *, ptr,
//	               Properties::NON_EXPLICIT,
//	               ____ref_ptr__T_P1,
//	               "",
//	               "");
//	I_Constructor1(IN, const osg::ref_ptr< Field > &, rp,
//	               Properties::NON_EXPLICIT,
//	               ____ref_ptr__C5_ref_ptr_R1,
//	               "",
//	               "");
	I_Method0(Field *, get,
	          Properties::NON_VIRTUAL,
	          __T_P1__get,
	          "",
	          "");
	I_Method0(bool, valid,
	          Properties::NON_VIRTUAL,
	          __bool__valid,
	          "",
	          "");
	I_Method0(Field *, release,
	          Properties::NON_VIRTUAL,
	          __T_P1__release,
	          "",
	          "");
	I_Method1(void, swap, IN, osg::ref_ptr< Field > &, rp,
	          Properties::NON_VIRTUAL,
	          __void__swap__ref_ptr_R1,
	          "",
	          "");
	I_SimpleProperty(Field *, , 
	                 __T_P1__get, 
	                 0);
END_REFLECTOR
#endif
//STD_MAP_REFLECTOR(std::map< std::string COMMA  osg::ref_ptr< Field > >)


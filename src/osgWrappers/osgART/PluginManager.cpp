// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Referenced>
#include <osgART/PluginManager>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_OBJECT_REFLECTOR(osgART::PluginManager)
	I_DeclaringFile("osgART/PluginManager");
	I_BaseType(osg::Referenced);
	I_StaticMethodWithDefaults1(osgART::PluginManager *, instance, IN, bool, erase, false,
	                            __PluginManager_P1__instance__bool_S,
	                            "Returns an instance of a plugin manager as it is singleton. ",
	                            " param erase exlicitly deletes the instance of the plugin manager   return instance of the PluginManager or 0 if erase was true ");
	I_MethodWithDefaults2(int, load, IN, const std::string &, pluginname, , IN, bool, resolveName, true,
	                      Properties::NON_VIRTUAL,
	                      __int__load__C5_std_string_R1__bool,
	                      "Load an external plugin. ",
	                      " param filename short version or complete path (use  resolveName with false)   return -1 if failed, otherwise this is the ID of the tracker loaded ");
	I_Method1(osg::Referenced *, get, IN, int, id,
	          Properties::NON_VIRTUAL,
	          __osg_Referenced_P1__get__int,
	          "Return a pointer to the plugin. ",
	          " param identifier to get the plugin instance   return 0 if unsuccessfull or a pointer to the plugin ");
	I_Method2(int, add, IN, const std::string &, name, IN, osg::Referenced *, plugin,
	          Properties::NON_VIRTUAL,
	          __int__add__C5_std_string_R1__osg_Referenced_P1,
	          "Add a new instance of a dynamically loaded class. ",
	          " param name identifier to retrieve the object  plugin pointer to the instantiated class   return id of the loaded plugin ");
END_REFLECTOR


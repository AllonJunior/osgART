/* -*-c++-*- 
 * 
 * osgART - Augmented Reality ToolKit for OpenSceneGraph
 * 
 * Copyright (C) 2005-2009 Human Interface Technology Laboratory New Zealand
 * Copyright (C) 2010-2013 Raphael Grasset, Julian Looser, Hartmut Seichter
 *
 * This library is open source and may be redistributed and/or modified under
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the osgart.org website.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * OpenSceneGraph Public License for more details.
*/

 /*
 *	Rev		Date		Who		Changes
 *  1.0   	2006-12-08  ---     Version 1.0 release.
 *
 */

#ifndef OSGART_ARTOOLKIT_VIDEO
#define OSGART_ARTOOLKIT_VIDEO 1


//ARToolKit header include
#include <AR/video.h>

#include <osg/Object>
#include <osg/Notify>
#include <osg/Timer>

#include <osgDB/FileUtils>

#include <iostream>
#include <iomanip>
#include <cstring>


#include "osgART/PluginManager"
#include "osgART/Video"
#include "osgART/VideoConfiguration"


namespace osgART {

class ARToolKitVideo : public osgART::Video
{
public:


    // Standard Services

    /**
        * Default constructor. It creates a video source from a configuration string
        * as it is been used in the original AR Toolkit 2.71
        * \param videoName a string definition of the video background. See documentation
        * of ARToolKit for further details.
        */
    ARToolKitVideo();

    /**
        * Copy constructor.
        *
        */
    ARToolKitVideo(const ARToolKitVideo &,
        const osg::CopyOp& copyop = osg::CopyOp::SHALLOW_COPY);

    /**
        * Destructor.
        *
        */
    virtual ~ARToolKitVideo();


    META_Object(osgART,ARToolKitVideo)

    /**
    * Affectation operator.
    *
    */
    ARToolKitVideo& operator = (const ARToolKitVideo &);

    /**
        * Open the video stream. Access the video stream (hardware or file) and get an handle on it.
        */
    bool init();

    /**
        * Close the video stream. Terminates the connection with the video stream and clean handle.
        */
    bool close(bool waitForThread = true);

    /**
        * Start the video stream grabbing. Start to get image from the video stream. In function of the
        * implementation on different platform, this function can run a thread, signal or
        * real-time function.
        */
    bool start();

    /**
        * Stop the video stream grabbing. Stop to get image from the video stream. In function
        * of the implementation on different platform, this function can stop a thread, signal or
        * real-time function.
        */
    bool stop();

    /**
        * Update the video stream grabbing. Try to get an image of the video instance, usable
        * by your application.
        */
    bool update(osg::NodeVisitor* nv = 0L);


    /**
    * Deallocate image memory. Deallocates any internal memory allocated by the instance of this
    * class.
    */
    void releaseImage();

private:

    AR2VideoParamT *video;

    GLint _internalformat_GL;
    GLenum _format_GL;
    GLenum _datatype_GL;


    int getGLPixelFormatForARPixelFormat(const int arPixelFormat, GLint *internalformat_GL, GLenum *format_GL, GLenum *type_GL);

};



} // namespace osgART


#endif

/* -*-c++-*-
 *
 * osgART - AR for OpenSceneGraph
 * Copyright (C) 2005-2009 Human Interface Technology Laboratory New Zealand
 * Copyright (C) 2009-2013 osgART Development Team
 *
 * This file is part of osgART
 *
 * osgART 2.0 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * osgART 2.0 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with osgART 2.0.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
 /*
 *	Rev		Date		Who		Changes
 *  1.0   	2006-12-08  ---     Version 1.0 release.
 *
 */
// @@OSGART_LICENSE_HEADER_BEGIN@@
// @@OSGART_LICENSE_HEADER_END@@

#ifndef OSGART_SINGLEMARKER
#define OSGART_SINGLEMARKER 1

// STL include
#include <string>
#include <vector>

// local include
#include "osgART/Export"
#include "osgART/Target"

// AR ToolKit include
#include <AR/ar.h>

namespace osgART {

	/**
	* \class SingleTarget.
	* \brief A target consisting of a single pattern.
	*/
	class SingleTarget : public Target
	{
	public:	
		
        virtual bool isSameKindAs(const osg::Object* obj) const {
            return dynamic_cast<const SingleTarget*>(obj) != 0L;
        }
        virtual const char* className() const { return "SingleTarget"; }
        
    
		/** 
		 * \brief default constructor.
		 *
		 */
		SingleTarget();
		
	    
		bool initialise(const std::string& pattFile, double width, double center[2]);

		virtual void setActive(bool a);

		void update(ARMarkerInfo* targetInfo, bool useHistory = false);
		
		int getPatternID();
		double getPatternWidth();
		double* getPatternCenter();

		
		TargetType getType() const;
	
	    
	protected:
	
		/**
		 * \brief destructor.
		 */
		virtual ~SingleTarget();	    

	    int             patt_id;
		double          patt_width;
		double          patt_center[2];
		double          patt_trans[3][4];
		
		bool			mInitialData;
		
		friend class ARToolKitTracker;
		
	};
};

#endif

/* -*-c++-*-
 *
 * osgART - AR for OpenSceneGraph
 * Copyright (C) 2005-2009 Human Interface Technology Laboratory New Zealand
 * Copyright (C) 2009-2013 osgART Development Team
 *
 * This file is part of osgART
 *
 * osgART 2.0 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * osgART 2.0 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with osgART 2.0.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

 /*
 *	Rev		Date		Who		Changes
 *  1.0   	2006-12-08  ---     Version 1.0 release.
 *
 */

#ifndef OSGART_ARTOOLKIT_VIDEO
#define OSGART_ARTOOLKIT_VIDEO 1


//ARToolKit header include
#include <AR/video.h>

#include <osg/Object>
#include <osg/Notify>
#include <osg/Timer>

#include <osgDB/FileUtils>

#include <iostream>
#include <iomanip>
#include <cstring>


#include "osgART/PluginManager"
#include "osgART/Video"
#include "osgART/VideoConfiguration"


namespace osgART {

class ARToolKitVideo : public osgART::Video
{
public:


    // Standard Services

    /**
        * Default constructor. It creates a video source from a configuration string
        * as it is been used in the original AR Toolkit 2.71
        * \param videoName a string definition of the video background. See documentation
        * of ARToolKit for further details.
        */
    ARToolKitVideo();

    /**
        * Copy constructor.
        *
        */
    ARToolKitVideo(const ARToolKitVideo &,
        const osg::CopyOp& copyop = osg::CopyOp::SHALLOW_COPY);

    /**
        * Destructor.
        *
        */
    virtual ~ARToolKitVideo();


    META_Object(osgART,ARToolKitVideo)

    /**
    * Affectation operator.
    *
    */
    ARToolKitVideo& operator = (const ARToolKitVideo &);

    /**
        * Open the video stream. Access the video stream (hardware or file) and get an handle on it.
        */
    bool open();

    /**
        * Close the video stream. Terminates the connection with the video stream and clean handle.
        */
    void close(bool = true);

    /**
        * Start the video stream grabbing. Start to get image from the video stream. In function of the
        * implementation on different platform, this function can run a thread, signal or
        * real-time function.
        */
    void play();

    /**
        * Stop the video stream grabbing. Stop to get image from the video stream. In function
        * of the implementation on different platform, this function can stop a thread, signal or
        * real-time function.
        */
    void pause();

    /**
        * Update the video stream grabbing. Try to get an image of the video instance, usable
        * by your application.
        */
    void update(osg::NodeVisitor* nv);


    /**
    * Deallocate image memory. Deallocates any internal memory allocated by the instance of this
    * class.
    */
    void releaseImage();

    virtual osgART::VideoConfiguration* getVideoConfiguration();


private:

    AR2VideoParamT *video;

    osgART::VideoConfiguration m_config;

    GLint _internalformat_GL;
    GLenum _format_GL;
    GLenum _datatype_GL;


    int getGLPixelFormatForARPixelFormat(const int arPixelFormat, GLint *internalformat_GL, GLenum *format_GL, GLenum *type_GL);

};



} // namespace osgART


#endif

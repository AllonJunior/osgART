/*
 * osgART / AR Toolkit for OpenSceneGraph
 * (C) 2004-2006 HIT Lab NZ, University of Canterbury
 *
 * Licensing is governed by the LICENSE.txt which is 
 * part of this library distribution.
 *
 */
 
#ifndef OSGART_PTGREYVIDEO
#define OSGART_PTGREYVIDEO 1

//standard include
#include <iostream>
#include <string>

//graphics include
#include <PGRFlyCapture.h>
#include <osgART/Export>
#include <OpenThreads/Mutex>
#include <osg/Vec4s>

//personnal include
#include <osgART/GenericVideo>
#include <osgART/VideoConfig>

/**
 * class PtGreyVideo.
 *
 */
class PtGreyVideo: public osgART::GenericVideo
{
public:        
// Standard Services
    
    /** 
    * \brief default constructor.
    */
    PtGreyVideo();

   
    
    /**
     * \brief open the Video stream.
     * Access the Video stream (hardware or file) and get an handle on it.
     */
	void open();
	
	/**
     * \brief close the Video stream.
     * Terminate the connection with the Video stream and clean handle.
     */
	void close();
	
	/**
     * \brief start the Video stream grabbing.
     * Start to get image from the Video stream. In function of the implementation on different
     * platform, this function can run a thread, signal or real-time function. 
     */
	void start();
	
	/**
    * \brief stop the Video stream grabbing.
    * Stop to get image from the Video stream. In function of the implementation on different
    * platform, this function can stop a thread, signal or real-time function. 
    */
	void stop();
	
	/**
     * \brief update the Video stream grabbing.
     * Try to get an image of the Video instance, usable by your application.
     */
	void update();



	/**
	 * \brief get information from the camera.
	 *
	 */
	void getInfo();
	
	/** 
	* \brief enable a FORMAT_7 ROI capture mode.
	* activat this function before the start of a program. the roi can't be changed
	* after the start function
	* @param _roi if true enable, false disable.
	*/
	void setROI(bool _roi) {isRoi=_roi;};
	
	/** 
	* \brief setup the ROI area.
	* activate this function before the start of a program. the roi area can't be changed
	* after the start function. By default the camera get a RAW8 format type.
	* @param _xstart
	
	*/
	void setROIParameters(int _xstart,int _ystart,int _xend, int _yend);
	
	bool IsRunning() {return isRunning;};
	
	unsigned char** getRefImage() {return &newImage;};
	
	bool haveNewImage;
	
	osgART::VideoConfiguration* getVideoConfiguration();
    
protected:

	void configure();
	
	osgART::VideoConfiguration m_config;

	int xsize, ysize;

    /** 
    * \brief destructor.
    *
    */
    virtual ~PtGreyVideo();   
   
	
private:

//Private Services


//Private Type

//Private Data
	FlyCaptureContext context;
	FlyCaptureVideoMode videoMode;	FlyCaptureFrameRate videoSpeed;
	int camIndex;
	bool isRunning;
	bool isRoi;
	int xstart,ystart,xend,yend;
	unsigned char* newImage;
	OpenThreads::Mutex internalMutex;
	
	osg::Vec4s m_roi;

	
};

#endif
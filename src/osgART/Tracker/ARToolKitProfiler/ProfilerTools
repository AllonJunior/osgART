/*
 * osgART / AR Toolkit for OpenSceneGraph
 * (C) 2004-2006 HIT Lab NZ, University of Canterbury
 *
 * Licensing is governed by the LICENSE.txt which is 
 * part of this library distribution.
 *
 */

#ifndef OSGART_BENCH_TOOLS_H
#define OSGART_BENCH_TOOLS_H

/**
 * \file  ARToolKitTrackerProfiler
 * \author Yannick Allusse Yannick.Allusse@hitlabnz.org
 */

#include "osgART/Export"
#include "osgART/Marker"
#include "osgART/GenericVideo"
#include "osgART/GenericTracker"
#include "osgART/TrackerManager"
#include <osgText/text>
#include <osg/vec4>
#include <osg/vec3>
#include <string>
#include <stdio.h>

#include <SG_TLS_config.h>
#include <SG_TRC_config.h>
#include <SG_TRC_appli.h>

namespace osgART {
	using namespace SG_TRC;


OSGART_EXPORT TiXmlElement* XMLSaveVec3(TiXmlElement* _XML_ROOT, const std::string _Name, const osg::Vec3 &_Vec);
OSGART_EXPORT TiXmlElement* XMLSaveQuat(TiXmlElement* _XML_ROOT, const std::string _Name, const osg::Quat &_Quat);
OSGART_EXPORT TiXmlElement* XMLLoadVec3(TiXmlElement* _XML_ROOT, const std::string _Name, osg::Vec3 &_Vec);
OSGART_EXPORT TiXmlElement* XMLLoadQuat(TiXmlElement* _XML_ROOT, const std::string _Name, osg::Quat &_Quat);


OSGART_EXPORT void PrintMatrix	(std::string name, const osg::Matrix &Transform);//, int sizex=4, int sizey=4);
OSGART_EXPORT void PrintVector3D	(std::string name, const osg::Vec3d &Vec3d);
OSGART_EXPORT osg::Matrix DiffMatrix(const osg::Matrix & _base, const osg::Matrix & _m2);
OSGART_EXPORT osg::Matrix GenerateMatrix(const osg::Vec3d & _trans, const osg::Vec3d & _rot);

OSGART_EXPORT unsigned char * ConvertImageData(const unsigned char *_src, unsigned char *_dst, unsigned int _width, unsigned int _height, int _srcFormat, int _DestFormat);

OSGART_EXPORT osgText::Text *CreateText(const char *_Text, osg::Vec3 &_Pos, osg::Vec4 &_Color, float _Size, osgText::Font *_Font, osgText::Text::Layout _Layout);

OSGART_EXPORT std::string trim(std::string& s,const std::string& drop = " ");

/**
* Adjust the projection matrix depending on the image flipH and FlipV.
* \note Use this function only if you have some issue with image fliping and your projection matrix.
* \return The converted matrix.
*/
OSGART_EXPORT osg::Matrix FlipMatrix(const osg::Matrix &_srcMat, osg::Vec3 &_Flip);

};

#endif//OSGART_BENCH_TOOLS_H
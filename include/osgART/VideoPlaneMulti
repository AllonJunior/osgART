#ifndef OSGART_VIDEOPLANE2
#define OSGART_VIDEOPLANE2


// STL include
#include <map>

// graphics include
#include <osg/Node>
#include <osg/Group>
#include <osg/MatrixTransform>
#include <osg/Geometry>
#include <osg/Projection>


// local include
#include "osgART/Export"
#include "osgART/GenericVideoObject"
#include "osgART/GenericVideo"

namespace osgART {

	/**
	* \class VideoPlaneMulti.
	*
	*/
	class OSGART_EXPORT VideoPlaneMulti : public GenericVideoObject
	{
	public:        
		/** 
		 * \brief default constructor.
		 * \param width width of the texture
		 * \param height of the texture
		 */
		VideoPlaneMulti::VideoPlaneMulti(int width, int height);
		
		/**
		 * \brief destructor.
		 */
		virtual ~VideoPlaneMulti();
		

		/**
		 * Initialize
		 */    
		virtual void init();
		
		/** 
		 * Add a video
		 * \param layerVideoID ID of the video that is to be added to the 
		 * layered texture
		 */
		void addVideo(int layerVideoID);

	protected:
		
		osg::Node* buildPlane();
		osg::Geode* buildGeometry();
		
		void setTransparency(float alpha);

	private:
	
		osg::Group*	m_root;
		
		osg::MatrixTransform*	m_ModelMatrix;
		osg::Geometry*			m_geometry;
		osg::Geode*				m_backGeode;
		
		float m_width;
		float m_height;
		
		std::vector<int> m_LayerVideoID;
		std::list<osg::Texture*> m_LayerTextures;
		
		
	};
};
#endif


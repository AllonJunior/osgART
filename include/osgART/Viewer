/*
 *	osgART/Viewer
 *	osgART: Wrapper around Viewer libraries
 *
 *	Copyright (c) 2005-2007 ARToolworks, Inc. All rights reserved.
 *	
 *	Rev		Date		Who		Changes
 *  1.0   	2006-02-07  hse25   Version 1.1 release.
 *
 */
// @@OSGART_LICENSE_HEADER_BEGIN@@
// @@OSGART_LICENSE_HEADER_END@@

/**
 *  \file  Viewer
 *  \brief wrapper around different viewer libraries
 *
 *  This is only a convenience class to wrap functionality used by osgProducer (OpenSceneGraph 0.9.x - 1.2) and
 *  osgViewer (OpenSceneGraph 2.0 and later)
 */

#ifndef OSGART_VIEWER
#define OSGART_VIEWER 1

#include <osg/Version>
#include <osgART/Export>

// 
// A wrapper around the legacy osgProducer and new osgViewer
//
#if (OSG_VERSION_MAJOR >= 2)

#include <osgViewer/Viewer>

namespace osgART {
	

	// simple wrapper around osgViewer to be used with osgART
	struct Viewer : public osgViewer::Viewer {

		Viewer() : osgViewer::Viewer()
		{
			this->setThreadingModel(osgViewer::Viewer::SingleThreaded);
			this->getCamera()->setComputeNearFarMode(osg::CullSettings::DO_NOT_COMPUTE_NEAR_FAR);
			
		}

		void sync() 
		{
		}

		void cleanup_frame() 
		{
		}
	};
} // namespace

#else // OSG_VERSION

#include <Producer/RenderSurface>
#include <osgProducer/Viewer>


namespace osgART {

	#warning "You are using a legacy version of OpenSceneGraph!"

	#if defined(MSCVER)
		
		#pragma comment(lib,"osgProducer.lib")
		#pragma comment(lib,"Producer.lib")
	#endif

	struct Viewer : public osgProducer::Viewer {

		Viewer() : osgProducer::Viewer() 
		{
			this->setUpViewer(osgProducer::Viewer::ESCAPE_SETS_DONE);
			this->getCullSettings().setComputeNearFarMode(osg::CullSettings::DO_NOT_COMPUTE_NEAR_FAR);

		#ifndef __linux
			// somehow on Ubuntu Dapper this ends up in a segmentation fault
			this->getCamera(0)->getRenderSurface()->fullScreen(false);
		#endif
		}

		void frame() 
		{
			this->sync();	
			this->update();
			osgProducer::Viewer::frame();	
		}
	};

} // namespace

#endif

#endif

 
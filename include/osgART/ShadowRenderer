/*
 * osgART / AR Toolkit for OpenSceneGraph
 * (C) 2004-2006 HIT Lab NZ, University of Canterbury
 *
 * Licensing is governed by the LICENSE.txt which is 
 * part of this library distribution.
 *
 */
#ifndef OSGART_SHADOWRENDERER
#define OSGART_SHADOWRENDERER

// graphics include
#include <osg/Node>
#include <osg/Group>
#include <osg/MatrixTransform>
#include <osg/Geometry>
#include <osg/Projection>


// local include
#include "osgART/Export"
#include "osgART/GenericVideoObject"
#include "osgART/GenericVideo"

namespace osgART {

	/**
	* \class ShadowRenderer.
	* Implement the depth shadow rendering based on depth shadow with GLSL shaders support.
	* This class just defined Virtual to Virtual shadow
	*/
	class OSGART_EXPORT ShadowRenderer : public osg::Group
	{
	public:        
		/** 
		 * \brief default constructor.
		 * \param model defined the model
		 * \param lightTransform defined the light position 
		 * \param markerId is the marker id 	
		 */
		ShadowRenderer(osg::Node*,osg::MatrixTransform*,int markerId = 0);
		
		ShadowRenderer(const ShadowRenderer& video);
	    
		/**
		 * \brief destructor.
		 */
		virtual ~ShadowRenderer();

		/**
		 * Initialize
		 */    
		virtual void init();
		
		virtual void setShadowResolution(int width, int height) {m_shadowWidth=width;m_shadowHeight=height;};

	protected:
		osg::Node* m_shadowedScene;

	private:
	osg::MatrixTransform* m_lightTransform;
	int m_markerId;

	int m_shadowWidth;
	int m_shadowHeight;
	
	};
};
#endif

